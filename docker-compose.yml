# version: "3.9"

services:
  etl_pipeline:
    build:
      context: ./etl_pipeline
      dockerfile: ./Dockerfile
    container_name: etl_pipeline
    volumes:  
      - ./etl_pipeline:/opt/dagster/app
    env_file:
      - .env
    networks:
      - de_network

  minio:
    hostname: minio
    image: "minio/minio"
    container_name: minio
    ports:
      - "9001:9001"
      - "9000:9000"
    command: [ "server", "/data", "--console-address", ":9001" ]
    volumes:
      - ./minio:/data
    networks:
      - de_network
    env_file:
      - .env
      
  mc:
    image: minio/mc
    container_name: mc
    hostname: mc
    env_file:
      - .env
    entrypoint: >
      /bin/sh -c "until (/usr/bin/mc config host add minio http://minio:9000 minio minio123) do echo '...waiting...' && sleep 1; done; 
      /usr/bin/mc mb minio/warehouse; 
      /usr/bin/mc policy set public minio/warehouse; exit 0;"
    depends_on:
      - minio
    networks:
      - de_network

  de_psql:
    image: postgres:15
    container_name: de_psql
    ports:
      - "5430:5432"  # Đảm bảo ánh xạ cổng đúng, cổng Postgres mặc định là 5432
    env_file:
      - .env
    volumes:
      - ./postgresql:/var/lib/postgresql/data
    networks:
      - de_network  # Sửa từ networks thành de_network

  dbt:
    build: ./
    image: dbt
    container_name: dbt_test
    volumes:
      - ./dbt_analyst:/usr/src/dbt/dbt_project
    networks:
      - de_network
    depends_on:
      - de_psql

  de_dagster:
    build:
      context: ./Dagster/
    container_name: de_dagster
    image: de_dagster

  de_dagster_dagit:
    image: de_dagster:latest
    entrypoint:
      - dagit
      - -h
      - "0.0.0.0"
      - -p
      - "3001"
      - -w
      - workspace.yaml
    container_name: de_dagster_dagit
    expose:
      - "3001"
    ports:
      - "3001:3001"
    volumes: # Make docker client accessible so we can terminate containers from dagit
      - /var/run/docker.sock:/var/run/docker.sock
      - ./dagster_home:/opt/dagster/dagster_home
    env_file:
      - .env
    networks:
      - de_network

  de_dagster_daemon:
    image: de_dagster:latest
    entrypoint:
      - dagster-daemon
      - run
    container_name: de_dagster_daemon
    volumes: # Make docker client accessible so we can launch containers using host docker
      - /var/run/docker.sock:/var/run/docker.sock
      - ./dagster_home:/opt/dagster/dagster_home
    env_file:
      - .env
    networks:
      - de_network

  streamlit:
      image: streamlit
      container_name: streamlit
      build:
        context: ./streamlit/
      volumes:
        - ./streamlit:/usr/src/streamlit
      ports:
        - 8501:8501
      expose:
        - 8501  
      networks:
        - de_network
networks:
  de_network:
    driver: bridge
